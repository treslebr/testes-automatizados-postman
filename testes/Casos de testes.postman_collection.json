{
	"info": {
		"_postman_id": "43e42bb1-32ee-4f75-bc5e-2558de3e42b8",
		"name": "Casos de testes",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Admin - Realizar login",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Realizar login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/users/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f67f3033-67d8-4539-900c-fc4fa119bcd3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fd435417-6a50-43d2-9dea-1aaa3f73c595",
										"type": "text/javascript",
										"exec": [
											"let json = pm.response.json();",
											"",
											"let varEnvironment = (json.is_admin == 1) ? \"token\" : \"token-customer\";",
											"",
											"pm.environment.set(varEnvironment, json.access_token);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.an('object');",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Realizar login - Senha inválida",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"XXXXXXX\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/users/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8fe5b268-97d9-468d-8b13-b19792affb26",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d217b16-06b5-4849-92f0-3ed3df1bbddd",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Admin] Realizar login - Método não permitido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/users/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin]  Realizar login - Não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/users/logiXXXXXXn",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"logiXXXXXXn"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "eed97407-5701-4d83-8eba-3b46ac182b3c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4518e943-d634-4f18-be46-c7387830eba3",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"      pm.response.to.be.an('object');",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 422",
							"item": [
								{
									"name": "[Admin] Realizar login -  Email inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"XXXXXXXX\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/users/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Realizar login - Body vazio.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/users/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"users",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c0ed5a69-6e0f-40b0-a6f3-9adf530549d9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a18a431-90d4-4a02-8513-c1559fbdde7b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7a1ca48d-f6e5-4060-99f4-1fe6f3c6df68",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "8aea8fda-063b-4f0f-9748-9405306e9ee2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Cadastrar usuário",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Cadastrar usuário.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Testeppp\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											"pm.variables.set(\"name_radom\", Math.random().toString(36).slice(2));",
											"pm.variables.set(\"email_random\", Math.random().toString(36).slice(2)+\"@teste.com\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] Cadastrar usuário - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Admin] Cadastrar usuário - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/usersXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"usersXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Admin] Cadastrar usuário - Nome não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Email não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Email inválido.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"XXXXX\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Senha inválida.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"1\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Senha não informada.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Celular não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar usuário - Telefone não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/users",
											"host": [
												"{{url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "398045fb-1cc6-47cf-8bc1-7cb2173efc05",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26ed772b-8642-4b48-b901-cf635fddc412",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "dbf7f25c-efe3-4425-9dac-c7d8f481391e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c64ab0f9-eb0b-46e2-96ab-1ab433e450d3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Shipping",
			"item": [
				{
					"name": "Admin - Cadastrar frete",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Cadastrar frete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a92be7e5-ed05-4e8a-a0c6-0108bc4bebf6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2374b70d-f949-440e-8433-378daa652761",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											"",
											"pm.environment.set(\"shippingId\", jsonResponse.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"id is number\", function () {",
											"    pm.expect(jsonResponse.id).to.a('number');",
											"});",
											"",
											"pm.test(\"price is number\", function () {",
											"    pm.expect(jsonResponse.price).to.a('number');",
											"});",
											"",
											"pm.test(\"location is string\", function () {",
											"    pm.expect(jsonResponse.location).to.a('string');",
											"});",
											"",
											"",
											"/**",
											" * Verificando se o cadastro foi realizado com sucesso",
											" */",
											"pm.sendRequest({",
											"    url:pm.environment.get(\"url\")+\"/shippings/\"+pm.variables.get(\"shippingId\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"content-type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \"+ pm.environment.get(\"token\")",
											"    },",
											"    body: {}",
											"}, function (err, res) {",
											"    ",
											"    let dataPostRequest = JSON.parse(request.data); // dados enviados para o cadastro",
											"    ",
											"    pm.test(\"Consulta ao frete cadastrado\", function () {",
											"        pm.expect(res.code).to.equal(200);",
											"    });",
											"    ",
											"    if(res.code == 200){",
											"        ",
											"        let dataGetResponse = res.json();",
											"    ",
											"        dataGetResponse = res.json();          ",
											"        ",
											"        pm.test(\"price cadastrado\", function () {",
											"            pm.expect(dataGetResponse.price).to.equal(dataPostRequest.price);",
											"        });",
											"        ",
											"          pm.test(\"location cadastrado\", function () {",
											"            pm.expect(dataGetResponse.location).to.equal(dataPostRequest.location);",
											"        });",
											"    } ",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] Cadastrar frete - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLLL}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98a69b08-5c69-46a8-bee6-b56c5f17c34b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9423844c-e755-410a-a87e-96dfb2489283",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Admin] Cadastrar frete - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/shippingsXXXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippingsXXXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6e3962bb-eec0-4ca2-9866-3185c8911022",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e9ebb3b2-08ee-48fb-9223-5292a73572ee",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Admin] Cadastrar frete - Location não enviado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"price\": 2\n}"
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar frete - Price não enviado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] Cadastrar frete - Body vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9fc168ce-a1e2-4d8b-a386-b5db12f8c7a6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f4d944c8-b74c-498e-8e94-c30faeab5a2b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "457e2c3d-85f1-4343-aa71-090160ec78e1",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "49e73b99-3c74-48c3-b158-5cb914fba1dc",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Livre - Retornar fretes",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Livre] - Retornar fretes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1574c64-3681-4dd5-98be-b608b0ff022f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aeefb48f-0be1-401c-9a21-d4948e18c34d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bae42f9-bf45-4f9c-8214-dacc866687c5",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"let qtyResult = pm.response.json().length;",
											"",
											"if(qtyResult > 0){",
											"    ",
											"    let posFunc = function (max) {",
											"      return Math.floor(Math.random() * Math.floor(max));",
											"    }",
											"    ",
											"    let pos      = posFunc(qtyResult);",
											"    let jsonData = (pm.response.json())[pos];",
											"",
											"    pm.test(\"id is number\", function () {",
											"        pm.expect(jsonData.id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"price is number\", function () {",
											"        pm.expect(jsonData.id).to.a('number');",
											"    });",
											"    ",
											"        ",
											"    pm.test(\"location is string\", function () {",
											"        pm.expect(jsonData.location).to.a('string');",
											"    });",
											"    ",
											"}",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 404",
							"item": [
								{
									"name": "[Livre] - Retornar fretes - Recurso não encontrado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e1574c64-3681-4dd5-98be-b608b0ff022f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippingsXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippingsXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c6c5d2e8-5928-4ca0-b2c9-efe2739e941a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d31f9769-fb24-450d-8b19-441efa4d64b6",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6883e030-54ef-466c-9f63-086a7a8013ba",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ed5608ad-8e37-4113-a3c0-5ed160803542",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Livre - Retornar frete pelo ID",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Livre] Retornar frete pelo ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7db3a5d1-4590-4227-8303-a21686a41759",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "aeefb48f-0be1-401c-9a21-d4948e18c34d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8bae42f9-bf45-4f9c-8214-dacc866687c5",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"Busca retornada\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let jsonData = (pm.response.json());",
											"",
											"pm.test('Frente encontrado', function () {",
											"  pm.expect(pm.environment.get(\"shippingId\")).to.equal(jsonData.id);",
											"});",
											"",
											"pm.test(\"id is number\", function () {",
											"    pm.expect(jsonData.id).to.a('number');",
											"});",
											"",
											"pm.test(\"price is number\", function () {",
											"    pm.expect(jsonData.id).to.a('number');",
											"});",
											"    ",
											"pm.test(\"location is string\", function () {",
											"    pm.expect(jsonData.location).to.a('string');",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Livre] Retornar frete pelo ID - Autenticação inválida.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7db3a5d1-4590-4227-8303-a21686a41759",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98a69b08-5c69-46a8-bee6-b56c5f17c34b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9423844c-e755-410a-a87e-96dfb2489283",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 404",
							"item": [
								{
									"name": "[Livre] Retornar frete pelo ID - Id não existe",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7db3a5d1-4590-4227-8303-a21686a41759",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings/9999898989898",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"9999898989898"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c6c5d2e8-5928-4ca0-b2c9-efe2739e941a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d31f9769-fb24-450d-8b19-441efa4d64b6",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d4156b87-df27-407e-93be-819e176c467d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2ad4186c-3ca2-43bf-a898-208ad5d472c6",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - PUT - Atualizar frete",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar frete",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": 4\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ddb4b6b9-29e9-491b-8951-907c42028055",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dd50b274-e1d0-482b-a0e8-ba109bf025eb",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											"",
											"console.log(jsonResponse);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"/**",
											" * Verificando se o cadastro foi realizado com sucesso",
											" */",
											"pm.sendRequest({",
											"    url:pm.environment.get(\"url\")+\"/shippings/\"+pm.variables.get(\"shippingId\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"content-type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \"+ pm.environment.get(\"token\")",
											"    },",
											"    body: {}",
											"}, function (err, res) {",
											"    ",
											"    let dataPostRequest = JSON.parse(request.data); // dados enviados para o cadastro",
											"    ",
											"    pm.test(\"Consulta ao frete cadastrado\", function () {",
											"        pm.expect(res.code).to.equal(200);",
											"    });",
											"    ",
											"    if(res.code == 200){",
											"        ",
											"        let dataGetResponse = res.json();",
											"    ",
											"        dataGetResponse = res.json();          ",
											"        ",
											"        pm.test(\"price cadastrado\", function () {",
											"            pm.expect(dataGetResponse.price).to.equal(dataPostRequest.price);",
											"        });",
											"        ",
											"          pm.test(\"location cadastrado\", function () {",
											"            pm.expect(dataGetResponse.location).to.equal(dataPostRequest.location);",
											"        });",
											"    } ",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar frete - Não autorizado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLLL}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98a69b08-5c69-46a8-bee6-b56c5f17c34b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9423844c-e755-410a-a87e-96dfb2489283",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar frete - Frete não encontrado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade XXX\",\n\t\"price\": 4\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/23232323232323232",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"23232323232323232"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a767bd9a-dc74-403c-ad54-2a9a3b67567d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c2111be7-2a07-4125-816d-25c15948dd41",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"     pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar frete - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": \"4\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippiXXXXXX/1212121",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippiXXXXXX",
												"1212121"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a767bd9a-dc74-403c-ad54-2a9a3b67567d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c2111be7-2a07-4125-816d-25c15948dd41",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"     pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 422",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar frete - Location não enviado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"price\": 2\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar frete - Price não enviado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar frete - Body vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/javascript"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar frete - ID inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": \"4\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/XXXXXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"XXXXXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9fc168ce-a1e2-4d8b-a386-b5db12f8c7a6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f4d944c8-b74c-498e-8e94-c30faeab5a2b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"     pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8b0be79-1e55-4d87-84e0-90277b8d2538",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2cd20196-123a-4bfe-82a5-2d69ed3e363b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": " Admin - PATCH - Atualizar dados do frete",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do frete - Atualizar location",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO PATCH\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PATCH - Atualizar dados do freteAtualizar price",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"price\": 3.5\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ddb4b6b9-29e9-491b-8951-907c42028055",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dd50b274-e1d0-482b-a0e8-ba109bf025eb",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"/**",
											" * Verificando se o cadastro foi realizado com sucesso",
											" */",
											"pm.sendRequest({",
											"    url:pm.environment.get(\"url\")+\"/shippings/\"+pm.variables.get(\"shippingId\"),",
											"    method: \"GET\",",
											"    header: {",
											"        \"content-type\": \"application/json\",",
											"        \"Authorization\": \"Bearer \"+ pm.environment.get(\"token\")",
											"    },",
											"    body: {}",
											"}, function (err, res) {",
											"    ",
											"    let dataPostRequest = JSON.parse(request.data); // dados enviados para o cadastro",
											"    ",
											"    pm.test(\"Consulta ao frete cadastrado\", function () {",
											"        pm.expect(res.code).to.equal(200);",
											"    });",
											"    ",
											"    if(res.code == 200){",
											"        ",
											"        let dataGetResponse = res.json();",
											"    ",
											"        dataGetResponse = res.json();          ",
											"        ",
											"        if(dataPostRequest.price){",
											"             pm.test(\"price cadastrado\", function () {",
											"                pm.expect(dataGetResponse.price).to.equal(dataPostRequest.price);",
											"            });",
											"        }",
											"       ",
											"        if(dataPostRequest.location){",
											"            pm.test(\"location cadastrado\", function () {",
											"                pm.expect(dataGetResponse.location).to.equal(dataPostRequest.location);",
											"            });",
											"        }",
											"         ",
											"    } ",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do frete - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLLL}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "98a69b08-5c69-46a8-bee6-b56c5f17c34b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9423844c-e755-410a-a87e-96dfb2489283",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do frete - Frete não encontrado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": \"4\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/23232323232323232",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"23232323232323232"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PATCH - Atualizar dados do frete - Id não encontrado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": \"4\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippings/XXXXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"XXXXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5e18d015-199d-4e74-9f5d-0ec6985ebf46",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4de64a3c-ca09-48e9-ae4d-f4d800629165",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do frete - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "0a7b3817-d52a-4cc3-aec7-c58e2e4d53ba",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "46189312-d8f2-4554-a44c-ebfbbf524b34",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO UP\",\n\t\"price\": \"4\"\n}"
										},
										"url": {
											"raw": "{{url}}/shippiXXXXXX/1212121",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippiXXXXXX",
												"1212121"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "889c1e94-856b-466c-b50f-c45ddb89a0a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dfb2d2bb-e894-4d56-8560-683e10d895b0",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8b0be79-1e55-4d87-84e0-90277b8d2538",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "2cd20196-123a-4bfe-82a5-2d69ed3e363b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1712ae6a-5c8e-4dc1-9781-504a6bf3c81c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "3f7e1bd2-35a7-4329-860f-6d996d3e643b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customer ",
			"item": [
				{
					"name": "Cliente - Realizar login",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Realizar login",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e25800a-d065-49ae-a488-313e132f3468",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"customer@gmail.com\",\n\t\"password\": \"customer123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/customers/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f67f3033-67d8-4539-900c-fc4fa119bcd3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fd435417-6a50-43d2-9dea-1aaa3f73c595",
										"type": "text/javascript",
										"exec": [
											"let json = pm.response.json();",
											"",
											"let varEnvironment = (json.is_admin == 1) ? \"token\" : \"token-customer\";",
											"",
											"pm.environment.set(varEnvironment, json.access_token);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Realizar login - Sem autorização",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"customer@gmail.com\",\n\t\"password\": \"XXXXXXX\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/customers/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d64f440b-eab1-4b15-89f0-d10d3d0da2ce",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aafd91e4-d533-496f-91a3-6eac083b8019",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Cliente] Realizar login - Sem autorização - Método não permitido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/customers/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Realizar login - Sem autorização - Não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"admin@gmail.com\",\n\t\"password\": \"admin123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/customers/logXXXXin",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"logXXXXin"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "eed97407-5701-4d83-8eba-3b46ac182b3c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4518e943-d634-4f18-be46-c7387830eba3",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 422",
							"item": [
								{
									"name": "[Cliente] Realizar login - Sem autorização - Email inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"email\": \"XXXXXXXX\",\n\t\"password\": \"customer123\",\n\t\"remember_me\": true\n}"
										},
										"url": {
											"raw": "{{url}}/customers/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Realizar login - Sem autorização - Body vazio.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ad3eb555-5da0-4a25-bbf1-fda3a254f133",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/login",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"login"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c0ed5a69-6e0f-40b0-a6f3-9adf530549d9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8a18a431-90d4-4a02-8513-c1559fbdde7b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f35cd737-31b7-4d30-ade2-e97a5f0217d8",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b24cde0-ec46-477a-b44a-10bf65ac1e02",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - Retornar seus dados",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Retornar seus dados - Retornar cliente logado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/logged",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"logged"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "849ddc6c-95f6-4e5e-85df-112d504abf73",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "2f048a7f-5e83-43bd-a80f-34516aab7c60",
										"type": "text/javascript",
										"exec": [
											"let jsonData =  pm.response.json();",
											"pm.environment.set(\"customerId\", jsonData.id);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"id is number\", function () {",
											"    pm.expect(jsonData.id).to.a('number');",
											"});",
											"",
											"pm.test(\"email is string\", function () {",
											"    pm.expect(jsonData.email).to.a('string');",
											"});",
											"    ",
											"pm.test(\"telephone is string\", function () {",
											"    pm.expect(jsonData.telephone).to.a('string');",
											"});",
											"",
											"pm.test(\"is_admin is false\", function () {",
											"    pm.expect(jsonData.is_admin).to.be.equal(0);",
											"});",
											"",
											"pm.test(\"addresses is array\", function () {",
											"    pm.expect(jsonData.addresses).to.be.an('array');",
											"});",
											"",
											"",
											"",
											"if(jsonData.addresses.length > 0){",
											"    ",
											"    let address = jsonData.addresses[0];",
											"    ",
											"    pm.test(\"postcode is string\", function () {",
											"        pm.expect(address.postcode).to.a('string');",
											"    });",
											"    pm.test(\"country is string\", function () {",
											"        pm.expect(address.country).to.a('string');",
											"    });",
											"    pm.test(\"state is string\", function () {",
											"        pm.expect(address.state).to.a('string');",
											"    });",
											"    pm.test(\"city is string\", function () {",
											"        pm.expect(address.city).to.a('string');",
											"    });",
											"    pm.test(\"street_1 is string\", function () {",
											"        pm.expect(address.street_1).to.a('string');",
											"    });",
											"    pm.test(\"street_2 is string\", function () {",
											"        pm.expect(address.street_2).to.a('string');",
											"    });",
											"    pm.test(\"street_3 is string\", function () {",
											"        pm.expect(address.street_3).to.a('string');",
											"    });",
											"    pm.test(\"shipping_id is number\", function () {",
											"        pm.expect(address.shipping_id).to.a('number');",
											"    });",
											"    pm.test(\"customer_id is number\", function () {",
											"        pm.expect(address.customer_id).to.a('number');",
											"    });",
											"}",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Cliente] Retornar seus dados - Não autorizado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/logged",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"logged"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9fee6b05-508d-4442-ac44-d9209dc555ec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "0c0d2a43-e60e-46a0-b7d8-9ad2672a1c19",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Cliente] Retornar seus dados - Método não permitido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "eddd4f7c-d644-42f8-9e25-64767389d556",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7e6420d7-a963-4a77-9029-75cf7f77c781",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"location\": \"Liberdade RO\",\n\t\"price\": 5\n}"
										},
										"url": {
											"raw": "{{url}}/customers/logged",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"logged"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "889c1e94-856b-466c-b50f-c45ddb89a0a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dfb2d2bb-e894-4d56-8560-683e10d895b0",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "61b4acb1-3444-49de-879d-87deb60dfff4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ab0cc95e-5a9a-4ac6-9088-9cd78171cb14",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Retornar cliente pelo ID",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Retornar cliente pelo ID - Retornar cliente pelo ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers/{{customerId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "92c988e9-3f89-4985-ae92-f1b75b415b3f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90a50270-5ae1-4e27-a84e-cc80ba18b921",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"let jsonData = pm.response.json();",
											"",
											"pm.test(\"id is number\", function () {",
											"    pm.expect(jsonData.id).to.a('number');",
											"});",
											"",
											"pm.test(\"email is string\", function () {",
											"    pm.expect(jsonData.email).to.a('string');",
											"});",
											"    ",
											"pm.test(\"telephone is string\", function () {",
											"    pm.expect(jsonData.telephone).to.a('string');",
											"});",
											"",
											"pm.test(\"is_admin is false\", function () {",
											"    pm.expect(jsonData.is_admin).to.equal(0);",
											"});",
											"",
											"pm.test(\"addresses is array\", function () {",
											"    pm.expect(jsonData.addresses).to.be.an('array');",
											"});",
											"",
											"",
											"",
											"if(jsonData.addresses.length > 0){",
											"    ",
											"    let address = jsonData.addresses[0];",
											"    ",
											"    pm.test(\"postcode is string\", function () {",
											"        pm.expect(address.postcode).to.a('string');",
											"    });",
											"    pm.test(\"country is string\", function () {",
											"        pm.expect(address.country).to.a('string');",
											"    });",
											"    pm.test(\"state is string\", function () {",
											"        pm.expect(address.state).to.a('string');",
											"    });",
											"    pm.test(\"city is string\", function () {",
											"        pm.expect(address.city).to.a('string');",
											"    });",
											"    pm.test(\"street_1 is string\", function () {",
											"        pm.expect(address.street_1).to.a('string');",
											"    });",
											"    pm.test(\"street_2 is string\", function () {",
											"        pm.expect(address.street_2).to.a('string');",
											"    });",
											"    pm.test(\"street_3 is string\", function () {",
											"        pm.expect(address.street_3).to.a('string');",
											"    });",
											"    pm.test(\"shipping_id is number\", function () {",
											"        pm.expect(address.shipping_id).to.a('number');",
											"    });",
											"    pm.test(\"customer_id is number\", function () {",
											"        pm.expect(address.customer_id).to.a('number');",
											"    });",
											"}",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] Retornar cliente pelo ID - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers/{{customerId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "64a17264-2b5d-49eb-9d32-24cfc76b1a15",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f8db7fdd-659d-443a-a62d-32ccee83f1ac",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 404",
							"item": [
								{
									"name": "[Admin] Retornar cliente pelo ID - ID não existe.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers/99999999999999999999",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"99999999999999999999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "859d5a8e-3c4b-4f1b-bb6a-995ff0b1b81b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "482d1fdc-d02c-407d-8f8e-0afafcacf682",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Admin] Retornar cliente pelo ID - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers/{{customerId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "38bb0ea9-4092-48cd-9bd4-2295643ec263",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5a064553-9321-43b2-82a1-f1c76cd3d251",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f9189ffc-05fa-4ec3-aaf4-2209c84c0c9a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "653a1679-ae8a-4a25-aeee-8a2adbf22376",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Retornar clientes",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Retornar clientes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "92c988e9-3f89-4985-ae92-f1b75b415b3f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "90a50270-5ae1-4e27-a84e-cc80ba18b921",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"let qtyResult = pm.response.json().length;",
											"",
											"if(qtyResult > 0){",
											"    ",
											"    let posFunc = function (max) {",
											"      return Math.floor(Math.random() * Math.floor(max));",
											"    }",
											"    ",
											"    let pos      = posFunc(qtyResult);",
											"    let jsonData = (pm.response.json())[pos];",
											"    ",
											"    pm.test(\"id is number\", function () {",
											"        pm.expect(jsonData.id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"email is string\", function () {",
											"        pm.expect(jsonData.email).to.a('string');",
											"    });",
											"        ",
											"    pm.test(\"telephone is string\", function () {",
											"        pm.expect(jsonData.telephone).to.a('string');",
											"    });",
											"    ",
											"    pm.test(\"is_admin is false\", function () {",
											"        pm.expect(jsonData.is_admin).to.equal(0);",
											"    });",
											"    ",
											"    pm.test(\"addresses is array\", function () {",
											"        pm.expect(jsonData.addresses).to.be.an('array');",
											"    });",
											"    ",
											"    if(jsonData.addresses.length > 0){",
											"        ",
											"        let address = jsonData.addresses[0];",
											"        ",
											"        pm.test(\"postcode is string\", function () {",
											"            pm.expect(address.postcode).to.a('string');",
											"        });",
											"        pm.test(\"country is string\", function () {",
											"            pm.expect(address.country).to.a('string');",
											"        });",
											"        pm.test(\"state is string\", function () {",
											"            pm.expect(address.state).to.a('string');",
											"        });",
											"        pm.test(\"city is string\", function () {",
											"            pm.expect(address.city).to.a('string');",
											"        });",
											"        pm.test(\"street_1 is string\", function () {",
											"            pm.expect(address.street_1).to.a('string');",
											"        });",
											"        pm.test(\"street_2 is string\", function () {",
											"            pm.expect(address.street_2).to.a('string');",
											"        });",
											"        pm.test(\"street_3 is string\", function () {",
											"            pm.expect(address.street_3).to.a('string');",
											"        });",
											"        pm.test(\"shipping_id is number\", function () {",
											"            pm.expect(address.shipping_id).to.a('number');",
											"        });",
											"        pm.test(\"customer_id is number\", function () {",
											"            pm.expect(address.customer_id).to.a('number');",
											"        });",
											"    }",
											"}",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] Retornar clientes - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "64a17264-2b5d-49eb-9d32-24cfc76b1a15",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f8db7fdd-659d-443a-a62d-32ccee83f1ac",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 404",
							"item": [
								{
									"name": "[Admin] Retornar clientes - Recurso não encontrado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customersXXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"customersXXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "859d5a8e-3c4b-4f1b-bb6a-995ff0b1b81b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "482d1fdc-d02c-407d-8f8e-0afafcacf682",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Admin] Retornar clientes - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "718bb707-7a8d-42e8-89ec-83bf91c5ce2c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "38bb0ea9-4092-48cd-9bd4-2295643ec263",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5a064553-9321-43b2-82a1-f1c76cd3d251",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "f9189ffc-05fa-4ec3-aaf4-2209c84c0c9a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "653a1679-ae8a-4a25-aeee-8a2adbf22376",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Livre - Cadastrar cliente",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Livre] Cadastrar cliente - Cadastrar cliente",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											"pm.variables.set(\"name_radom\", Math.random().toString(36).slice(2));",
											"pm.variables.set(\"email_random\", Math.random().toString(36).slice(2)+\"@teste.com\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Livre] Cadastrar cliente - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customersXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"customersXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Livre] Cadastrar cliente - Nome não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Email não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Email inválido.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"XXXXX\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Senha inválida.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"1\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Senha não informada.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"telephone\": \"2197623321\",\r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Celular não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"telephone\": \"2197623321\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Livre] Cadastrar cliente - Telefone não informado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"name\": \"{{name_radom}}\", \r\n    \"email\": \"{{email_random}}\", \r\n    \"password\": \"Teste12345\", \r\n    \"cellphone\": \"2197126625\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "398045fb-1cc6-47cf-8bc1-7cb2173efc05",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26ed772b-8642-4b48-b901-cf635fddc412",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cd67a22-cfec-436d-a6f3-5c2a05c5d25b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f444eec7-619d-4387-a58d-613e967c59bc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customer - Address",
			"item": [
				{
					"name": "Cliente - Cadastrar seu endereço",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Cadastrar seu endereço",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.environment.set(\"addressId\", json.id);",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"    pm.response.to.have.status(201);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"id is number\", function () {",
											"    pm.expect(json.id).to.a('number');",
											"});",
											"pm.test(\"postcode is string\", function () {",
											"    pm.expect(json.postcode).to.a('string');",
											"});",
											"pm.test(\"country is string\", function () {",
											"    pm.expect(json.country).to.a('string');",
											"});",
											"pm.test(\"state is string\", function () {",
											"    pm.expect(json.state).to.a('string');",
											"});",
											"pm.test(\"city is string\", function () {",
											"    pm.expect(json.city).to.a('string');",
											"});",
											"pm.test(\"street_1 is string\", function () {",
											"    pm.expect(json.street_1).to.a('string');",
											"});",
											"pm.test(\"street_2 is string\", function () {",
											"    pm.expect(json.street_2).to.a('string');",
											"});",
											"pm.test(\"street_3 is string\", function () {",
											"    pm.expect(json.street_3).to.a('string');",
											"});",
											"pm.test(\"shipping_id is number\", function () {",
											"    pm.expect(json.shipping_id).to.a('number');",
											"});",
											"pm.test(\"customer_id is number\", function () {",
											"    pm.expect(json.customer_id).to.a('number');",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Cliente] Cadastrar seu endereço - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Cliente] Cadastrar seu endereço - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token-customer}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - Recurso não encontrado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addressesXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addressesXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Cliente] Cadastrar seu endereço - postcode não informado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - postcode vazio",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - country vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - country não informado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - state vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - city vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - street_1 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - street_3 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - shipping_id vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Cadastrar seu endereço - shipping_id inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"XXXXX\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "398045fb-1cc6-47cf-8bc1-7cb2173efc05",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26ed772b-8642-4b48-b901-cf635fddc412",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - PUT - Atualizar endereço de um cliente específico.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"postcode is string\", function () {",
											"    pm.expect(json.postcode).to.a('string');",
											"});",
											"pm.test(\"country is string\", function () {",
											"    pm.expect(json.country).to.a('string');",
											"});",
											"pm.test(\"state is string\", function () {",
											"    pm.expect(json.state).to.a('string');",
											"});",
											"pm.test(\"city is string\", function () {",
											"    pm.expect(json.city).to.a('string');",
											"});",
											"pm.test(\"street_1 is string\", function () {",
											"    pm.expect(json.street_1).to.a('string');",
											"});",
											"pm.test(\"street_2 is string\", function () {",
											"    pm.expect(json.street_2).to.a('string');",
											"});",
											"pm.test(\"street_3 is string\", function () {",
											"    pm.expect(json.street_3).to.a('string');",
											"});",
											"pm.test(\"shipping_id is number\", function () {",
											"    pm.expect(json.shipping_id).to.a('number');",
											"});",
											"pm.test(\"customer_id is number\", function () {",
											"    pm.expect(json.customer_id).to.a('number');",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - cliente não encontrado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}3333",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}3333"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc10739-4542-4820-8a04-952860fb0b43",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b67040c5-9b3a-49d2-afd9-18b2fceccfa2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Recurso não encontrado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresseXXXs/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresseXXXs",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Postcode não informado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Postcode vazio",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Country vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Country não informado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - State vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - City vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Street_1 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Street_3 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Shipping_id vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PUT - Atualizar endereço de um cliente específico - Shipping_id inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"XXXXX\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "398045fb-1cc6-47cf-8bc1-7cb2173efc05",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26ed772b-8642-4b48-b901-cf635fddc412",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - PUT - Atualizar o seu endereço",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"postcode is string\", function () {",
											"    pm.expect(json.postcode).to.a('string');",
											"});",
											"pm.test(\"country is string\", function () {",
											"    pm.expect(json.country).to.a('string');",
											"});",
											"pm.test(\"state is string\", function () {",
											"    pm.expect(json.state).to.a('string');",
											"});",
											"pm.test(\"city is string\", function () {",
											"    pm.expect(json.city).to.a('string');",
											"});",
											"pm.test(\"street_1 is string\", function () {",
											"    pm.expect(json.street_1).to.a('string');",
											"});",
											"pm.test(\"street_2 is string\", function () {",
											"    pm.expect(json.street_2).to.a('string');",
											"});",
											"pm.test(\"street_3 is string\", function () {",
											"    pm.expect(json.street_3).to.a('string');",
											"});",
											"pm.test(\"shipping_id is number\", function () {",
											"    pm.expect(json.shipping_id).to.a('number');",
											"});",
											"pm.test(\"customer_id is number\", function () {",
											"    pm.expect(json.customer_id).to.a('number');",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Endereço não encontrado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}3333",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}3333"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc10739-4542-4820-8a04-952860fb0b43",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b67040c5-9b3a-49d2-afd9-18b2fceccfa2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"   pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token-customer}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresseXXXs/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresseXXXs",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Postcode não informado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Postcode vazio",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Country vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Country não informado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - State vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - City vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Street_1 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Street_3 vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Shipping_id vazio.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar o seu endereço - Shipping_id inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"XXXXX\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "398045fb-1cc6-47cf-8bc1-7cb2173efc05",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "26ed772b-8642-4b48-b901-cf635fddc412",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - PATCH - Atualizar dados do seu endereço.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"postcode is string\", function () {",
											"    pm.expect(json.postcode).to.a('string');",
											"});",
											"pm.test(\"country is string\", function () {",
											"    pm.expect(json.country).to.a('string');",
											"});",
											"pm.test(\"state is string\", function () {",
											"    pm.expect(json.state).to.a('string');",
											"});",
											"pm.test(\"city is string\", function () {",
											"    pm.expect(json.city).to.a('string');",
											"});",
											"pm.test(\"street_1 is string\", function () {",
											"    pm.expect(json.street_1).to.a('string');",
											"});",
											"pm.test(\"street_2 is string\", function () {",
											"    pm.expect(json.street_2).to.a('string');",
											"});",
											"pm.test(\"street_3 is string\", function () {",
											"    pm.expect(json.street_3).to.a('string');",
											"});",
											"pm.test(\"shipping_id is number\", function () {",
											"    pm.expect(json.shipping_id).to.a('number');",
											"});",
											"pm.test(\"customer_id is number\", function () {",
											"    pm.expect(json.customer_id).to.a('number');",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço - Endereço não encontrado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}3333",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}3333"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc10739-4542-4820-8a04-952860fb0b43",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b67040c5-9b3a-49d2-afd9-18b2fceccfa2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token-customer}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresseXXXs/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresseXXXs",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Cliente] PATCH - Atualizar dados do seu endereço - Shipping_id inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":\"99999999999999999\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "43f878c0-4cbe-4dba-a065-93adadc3b89d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "db0e2aad-c9d9-40e8-bdec-4a2f005248c7",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"   pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin  - PATCH - Atualizar dados do endereço de um cliente específico.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0e9599d9-0d0a-4840-9c6c-c6dbf5390aee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "00fff8a1-6b5e-4a93-b50e-f0f4ea53ce67",
										"type": "text/javascript",
										"exec": [
											"let json =  pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"pm.test(\"postcode is string\", function () {",
											"    pm.expect(json.postcode).to.a('string');",
											"});",
											"pm.test(\"country is string\", function () {",
											"    pm.expect(json.country).to.a('string');",
											"});",
											"pm.test(\"state is string\", function () {",
											"    pm.expect(json.state).to.a('string');",
											"});",
											"pm.test(\"city is string\", function () {",
											"    pm.expect(json.city).to.a('string');",
											"});",
											"pm.test(\"street_1 is string\", function () {",
											"    pm.expect(json.street_1).to.a('string');",
											"});",
											"pm.test(\"street_2 is string\", function () {",
											"    pm.expect(json.street_2).to.a('string');",
											"});",
											"pm.test(\"street_3 is string\", function () {",
											"    pm.expect(json.street_3).to.a('string');",
											"});",
											"pm.test(\"shipping_id is number\", function () {",
											"    pm.expect(json.shipping_id).to.a('number');",
											"});",
											"pm.test(\"customer_id is number\", function () {",
											"    pm.expect(json.customer_id).to.a('number');",
											"});",
											"",
											"",
											"",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 401",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico - Sem permissão",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "79218626-e1f9-4f22-ba8b-dc3b6080fb55",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b4a7b689-3d30-4b3b-a308-96ae1ba35335",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico - Cliente não encontrado",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}3333",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}3333"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7dc10739-4542-4820-8a04-952860fb0b43",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b67040c5-9b3a-49d2-afd9-18b2fceccfa2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 405",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico - Método não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7aa2067a-b3b1-4aaa-9311-c5fc51a29377",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "f8e700eb-e3e9-47ff-a262-a4694727cfc0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "COPY",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico - Não implementado.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"postcode\":\"22795190\",\r\n    \"country\":\"BR\",\r\n    \"state\":\"RJ\",\r\n    \"city\":\"Rio de Janeiro\",\r\n    \"street_1\":\"Rua Bangu\",\r\n    \"street_2\":\"1152\",\r\n    \"street_3\":\"casa\",\r\n    \"shipping_id\":{{shippingId}}\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresseXXXs/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresseXXXs",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5972c690-c864-4f29-a312-a7050ad49daa",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d52afd70-45f7-45f6-a106-7ed2503e3cf8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erros 422",
							"item": [
								{
									"name": "[Admin] PATCH - Atualizar dados do endereço de um cliente específico - Shipping_id inválido.",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8c4df0d5-bcfd-4aac-9b2c-0d04d01f3f20",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "f1463150-7241-4890-a60d-d2eec3ef1d0b",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"shipping_id\":\"99999999999999\"\r\n}"
										},
										"url": {
											"raw": "{{url}}/customers/{{customerId}}/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"{{customerId}}",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "107baf0d-375e-4627-ab37-38e0fdfe1db1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "15e10026-aeaf-4380-90a5-e1375b6d6a31",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "45d22ede-9716-454c-9010-1f785888fe46",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a1aeecdb-2aab-49ab-8627-fcd720e92cdf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1cd67a22-cfec-436d-a6f3-5c2a05c5d25b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f444eec7-619d-4387-a58d-613e967c59bc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product - Additional",
			"item": [
				{
					"name": "category",
					"item": [
						{
							"name": "Admin - Cadastrar categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto adicional",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"pm.environment.set(\"produtoAdicionalCategoriaId\", jsonResponse.id);",
													" ",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonResponse.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonResponse.name).to.a('string');",
													"});",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto adicional - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto adicional - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar categoria do produto adicional - Não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categoriesXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categoriesXXX"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto adicional - Body vazio",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"",
															"if(Object.keys(request.data).length === 0 && pm.response.to.have.status(422)){",
															"    pm.test(\"[422] Body is empty\", true);",
															"}else{",
															"    pm.test(\"Status code não identificado\", false);",
															"}",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar categoria do produto adicional - Categoria já cadastrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"var isStatus422 = pm.response.to.have.status(422);",
															"",
															"if(data.name === undefined && isStatus422){",
															"    pm.test(\"[422] name is empty\", true);",
															"}else{",
															"    pm.test(\"Status code não identificado\", false);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6bbf5146-a21e-4617-a0a1-e2301a27f82c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4336acbe-be1f-4b41-9356-7c7fbd2da736",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3feb1c47-d417-4822-b0b9-a2d687c005e4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1c2f258d-1b75-450d-bc37-b751e7639849",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar categorias",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admim] Retornar categorias do produto adicional",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3f90b77-7d0d-4aea-9183-97aed30f98ce",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"let qtyResult = pm.response.json().length;",
													"",
													"if(qtyResult > 0){",
													"    ",
													"    let posFunc = function (max) {",
													"      return Math.floor(Math.random() * Math.floor(max));",
													"    }",
													"    ",
													"    let pos      = posFunc(qtyResult);",
													"    let jsonData = (pm.response.json())[pos];",
													"",
													"    pm.test(\"id is number\", function () {",
													"        pm.expect(jsonData.id).to.a('number');",
													"    });",
													"    ",
													"    pm.test(\"name is string\", function () {",
													"        pm.expect(jsonData.name).to.a('string');",
													"    });",
													"}",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admim] Retornar categorias do produto adicional - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admim] Retornar categorias do produto adicional - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categoriesXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categoriesXXX"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"   pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admim] Retornar categorias do produto adicional - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "522c10c1-af1f-4e05-8843-66361856dcde",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "01f31d52-217a-400c-ad28-859eef55ba29",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"   pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2616c740-00cc-40d0-99ff-e37af7e85c5b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bbd26792-59b6-455e-af55-16f4b1d640e6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar categoria pelo ID",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e96c65db-e000-4dfd-83c2-06a4974761c8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "81a5142b-74c9-4dc7-bd39-b1271a807f99",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonData.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonData.name).to.a('string');",
													"});",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token1}}"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "24feeb2f-1dfd-4e48-8daf-ab7f80a39b80",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "20ffd631-bb22-4779-9722-d3f54e892e14",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID - Categoria não encontrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/categories/99999999999999999999999999999999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"99999999999999999999999999999999"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "71e74d00-3b4f-4afb-b9a7-fc9a8f3d71c0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "19177983-0e9d-4524-bb60-679e4026a4e1",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4b89ce07-ef60-4053-acd0-beb645478a94",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "542ca13e-46f7-45b0-9bd6-fdd589a31885",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PUT - Editar categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X2\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo XYZ333\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}999"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8b732485-0057-4077-833c-f736e455cba4",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "317cd6b1-3f25-47f5-aa98-814d3179ccc4",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Body vazio",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"",
															"if(Object.keys(request.data).length === 0 && pm.response.to.have.status(422)){",
															"    pm.test(\"[422] Body is empty\", true);",
															"}else{",
															"    pm.test(\"Status code não identificado\", false);",
															"}",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6bbf5146-a21e-4617-a0a1-e2301a27f82c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4336acbe-be1f-4b41-9356-7c7fbd2da736",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef8b3f3-bfe7-4550-82e7-b992cc7b6988",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b17d54a4-90fa-468c-827f-326aba39d1a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PATCH  - Editar dados da categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] PATCH  - Editar dados da categoria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X PATCH\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Adm - in] PATCH  - Editar dados da categoriaSem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] PATCH  - Editar dados da categoria - Categoria não encontrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories/{{produtoAdicionalCategoriaId}}099",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories",
														"{{produtoAdicionalCategoriaId}}099"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] PATCH  - Editar dados da categoria - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/additionals/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "fa704c3a-29ca-4d61-87bf-4a43c64b9411",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "76d887d2-fe92-4cb1-8158-5ec04d7364c2",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef8b3f3-bfe7-4550-82e7-b992cc7b6988",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b17d54a4-90fa-468c-827f-326aba39d1a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7c43a7a4-803d-495e-82bc-41d01977ecc7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "10d5db70-bc80-416f-aa34-923b8bc83153",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "additional",
					"item": [
						{
							"name": "Admin - Cadastrar produto",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Cadastrar produto produto adicional",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"Mussarela XX\",\r\n\t\"price\":2,\r\n\t\"product_additional_category_id\":{{produtoAdicionalCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"pm.environment.set(\"produtoAddtionalId\", jsonResponse.id);",
													" ",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonResponse.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonResponse.name).to.a('string');",
													"});",
													"",
													"pm.test(\"price is number\", function () {",
													"    pm.expect(jsonResponse.price).to.a('number');",
													"});",
													"",
													"pm.test(\"product_category_id is number\", function () {",
													"    pm.expect(jsonResponse.product_additional_category_id).to.a('number');",
													"});",
													"",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Cadastrar produto produto adicional - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{tokeniiii}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] Cadastrar produto produto adicional - Não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionalsXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionalsXXX"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] Cadastrar produto produto adicional - Nome não informado",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar produto produto adicional - Preço não informado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar produto produto adicional - Categoria não informada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": \"\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar produto produto adicional - Product_category_id não existe.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": 9999999999\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1b260960-8320-4e5a-9600-1626a584579d",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "aaf365e8-014d-41d8-b431-5adfb5d853ab",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5939d17-81d7-423b-84e2-a725962c6915",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "99622f9e-6283-42d2-820a-d8421494038f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar produto",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Retornar produtos",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "72ea6efc-af73-4b6c-ad2a-faae2950dfc2",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6c75aa28-715e-4574-9d48-2ff813206ce7",
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"",
													"let qtyResult = pm.response.json().length;",
													"",
													"if(qtyResult > 0){",
													"    ",
													"    let posFunc = function (max) {",
													"      return Math.floor(Math.random() * Math.floor(max));",
													"    }",
													"    ",
													"    let pos          = posFunc(qtyResult);",
													"    let jsonResponse = (pm.response.json())[pos];",
													"",
													"    pm.test(\"id is number\", function () {",
													"        pm.expect(jsonResponse.id).to.a('number');",
													"    });",
													"    ",
													"    pm.test(\"name is string\", function () {",
													"        pm.expect(jsonResponse.name).to.a('string');",
													"    });",
													"    ",
													"    pm.test(\"price is number\", function () {",
													"        pm.expect(jsonResponse.price).to.a('number');",
													"    });",
													"    ",
													"    pm.test(\"product_additional_category_id is number\", function () {",
													"        pm.expect(jsonResponse.product_additional_category_id).to.a('number');",
													"    });",
													"}",
													"",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erro 401",
									"item": [
										{
											"name": "[Admin] Retornar produto - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}XXX"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "460cc3bb-09b5-41e1-8b27-b17a809198f6",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "048419fd-7464-428b-9c99-7abab02a256a",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404 ",
									"item": [
										{
											"name": "[Admin] Retornar produto - Retornar produtos.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionalsXXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionalsXXXX"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] Retornar produto - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6895d9dd-d9f0-4627-af91-ed8b83e4b1be",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3a276b0f-064f-45ae-844e-4399092fac3f",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f2eeb33d-19c5-498c-9029-2217fb60ffee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dc25b7c7-a791-41e4-b13b-589abf3d1332",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar produto pelo ID",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Retornar produto pelo ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b8a1b8b8-df45-4330-b3c5-cece2664b3ce",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c9415747-ba89-4352-b6a3-8d8cee25b35b",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													" ",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonResponse.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonResponse.name).to.a('string');",
													"});",
													"",
													"pm.test(\"price is number\", function () {",
													"    pm.expect(jsonResponse.price).to.a('number');",
													"});",
													"",
													"pm.test(\"product_additional_category_id is number\", function () {",
													"    pm.expect(jsonResponse.product_additional_category_id).to.a('number');",
													"});",
													"",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erro 401",
									"item": [
										{
											"name": "[Admin] Retornar produto pelo ID - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}XXXX",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8525346f-e94d-4931-8619-d179b29e0e63",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c5614493-dea8-4ca6-b1bc-f4cf0e151e1a",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erro 404",
									"item": [
										{
											"name": "[Admin] Retornar produto pelo ID - Produto não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}999"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Retornar produto pelo ID - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/additionalsXXX/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionalsXXX",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "87b0c61e-8e1e-4501-9be8-fcdf3d5572d9",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "74b58f5e-1da5-473d-8b57-f0d973620d01",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "99720b3b-1a44-4fc4-a4dc-d232b3fe196d",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa65ea12-9137-4eac-95d1-14ff5277412b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PUT - Atualizar produto",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] PUT - Atualizar produto",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\": 3,\r\n\t\"product_additional_category_id\":{{produtoAdicionalCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] PUT - Atualizar produto - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{tokeniiii}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\": 3,\r\n\t\"product_additional_category_id\":{{produtoAdicionalCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] PUT - Atualizar produto - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoXYZ\",\r\n\t\"price\": 3,\r\n\t\"product_additional_category_id\":{{produtoAdicionalCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}999"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] PUT - Atualizar produto - Nome não informado",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\": 3,\r\n\t\"product_additional_category_id\":{{produtoAdicionalCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] PUT - Atualizar produto - Categoria não informada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\": 3\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] PUT - Atualizar produto - Product_category_id não existe.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\": 3,\r\n\t\"product_additional_category_id\":99999999999999999999\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1b260960-8320-4e5a-9600-1626a584579d",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "aaf365e8-014d-41d8-b431-5adfb5d853ab",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.jsonBody(\"errors\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5939d17-81d7-423b-84e2-a725962c6915",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "99622f9e-6283-42d2-820a-d8421494038f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PATCH - Atualizar algum campo do produto",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] PATCH - Atualizar algum campo do produto",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"price\": 6\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] PATCH - Atualizar algum campo do produto - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{tokeniiii}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] PATCH - Atualizar algum campo do produto - Product_category_id não existe.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": 9999999999\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"additionals",
														"{{produtoAddtionalId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "1b260960-8320-4e5a-9600-1626a584579d",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "aaf365e8-014d-41d8-b431-5adfb5d853ab",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d5939d17-81d7-423b-84e2-a725962c6915",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "99622f9e-6283-42d2-820a-d8421494038f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a981b2e1-0c21-4bf2-84ff-e49ab2683197",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9702b5e5-ee04-4641-a4f4-c580c3775a00",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "category",
					"item": [
						{
							"name": "Admin - Cadastrar categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"pm.environment.set(\"produtoCategoriaId\", jsonResponse.id);",
													" ",
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonResponse.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonResponse.name).to.a('string');",
													"});",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar categoria do produto - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categoriesXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categoriesXXX"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "43140f7e-4dde-47d3-b276-6a7a4f2ca7dc",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "91ee4cca-1b36-4dac-bfed-29f9d3b1d643",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] Cadastrar categoria do produto - Body vazio",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"",
															"if(Object.keys(request.data).length === 0 && pm.response.to.have.status(422)){",
															"    pm.test(\"[422] Body is empty\", true);",
															"}else{",
															"    pm.test(\"Status code não identificado\", false);",
															"}",
															"",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] Cadastrar categoria do produto - Categoria já cadastrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"var isStatus422 = pm.response.to.have.status(422);",
															"",
															"if(data.name === undefined && isStatus422){",
															"    pm.test(\"[422] name is empty\", true);",
															"}else{",
															"    pm.test(\"Status code não identificado\", false);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanches\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6bbf5146-a21e-4617-a0a1-e2301a27f82c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4336acbe-be1f-4b41-9356-7c7fbd2da736",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1288899a-ceb4-4b70-b423-ae66de007f12",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "aa0b3a73-a693-4d4a-85cb-8fb8d37f6418",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar categorias",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Retornar categorias - Retornar categorias do produto",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "d3f90b77-7d0d-4aea-9183-97aed30f98ce",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"let qtyResult = pm.response.json().length;",
													"",
													"if(qtyResult > 0){",
													"    ",
													"    let posFunc = function (max) {",
													"      return Math.floor(Math.random() * Math.floor(max));",
													"    }",
													"    ",
													"    let pos      = posFunc(qtyResult);",
													"    let jsonData = (pm.response.json())[pos];",
													"",
													"    pm.test(\"id is number\", function () {",
													"        pm.expect(jsonData.id).to.a('number');",
													"    });",
													"    ",
													"    pm.test(\"name is string\", function () {",
													"        pm.expect(jsonData.name).to.a('string');",
													"    });",
													"}",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Retornar categorias - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] Retornar categorias - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categoriesXXX",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categoriesXXX"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] Retornar categorias - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "522c10c1-af1f-4e05-8843-66361856dcde",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "01f31d52-217a-400c-ad28-859eef55ba29",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2616c740-00cc-40d0-99ff-e37af7e85c5b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "bbd26792-59b6-455e-af55-16f4b1d640e6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - Retornar categoria pelo ID",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID - Retornar categoria pelo ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e96c65db-e000-4dfd-83c2-06a4974761c8",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "81a5142b-74c9-4dc7-bd39-b1271a807f99",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													"",
													"let jsonData = pm.response.json();",
													"",
													"pm.test(\"id is number\", function () {",
													"    pm.expect(jsonData.id).to.a('number');",
													"});",
													"",
													"pm.test(\"name is string\", function () {",
													"    pm.expect(jsonData.name).to.a('string');",
													"});",
													"",
													" "
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token1}}"
													}
												],
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "24feeb2f-1dfd-4e48-8daf-ab7f80a39b80",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "20ffd631-bb22-4779-9722-d3f54e892e14",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] Retornar categoria pelo ID - Categoria não encontrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "87d041e7-260b-499d-9316-11dc2624a830",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"url": {
													"raw": "{{url}}/products/categories/99999999999999999999999999999999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"99999999999999999999999999999999"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "71e74d00-3b4f-4afb-b9a7-fc9a8f3d71c0",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "19177983-0e9d-4524-bb60-679e4026a4e1",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4b89ce07-ef60-4053-acd0-beb645478a94",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "542ca13e-46f7-45b0-9bd6-fdd589a31885",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PUT - Editar categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"let jsonResponse =  pm.response.json();",
													" ",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});"
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X9\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}999",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}999"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "018d5c3c-f7c9-437d-ba0a-4c4f171a9927",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "852bd72f-5a6a-4ce1-a704-ddb858e5f731",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"     pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] PUT - Editar categoria - Body vazio",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "[Admin] PUT - Editar categoria - Categoria já cadastrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanches\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "6bbf5146-a21e-4617-a0a1-e2301a27f82c",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4336acbe-be1f-4b41-9356-7c7fbd2da736",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"   pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef8b3f3-bfe7-4550-82e7-b992cc7b6988",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b17d54a4-90fa-468c-827f-326aba39d1a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Admin - PATCH - Editar dados da categoria",
							"item": [
								{
									"name": "Sucesso",
									"item": [
										{
											"name": "[Admin] - PATCH - Editar dados da categoria",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													},
													{
														"key": "Authorization",
														"value": "Bearer  {{token}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "e10b1352-f838-4896-ba57-f0f83cf44aca",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "16089d65-7fe9-4041-89b3-72a23e4e8f32",
												"type": "text/javascript",
												"exec": [
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													"pm.test(\"Content-Type is present\", function () {",
													"    pm.response.to.have.header(\"Content-Type\");",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 401",
									"item": [
										{
											"name": "[Admin] - PATCH - Editar dados da categoria - Sem permissão",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token-n}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": ""
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d8e60bad-1789-4d9a-a888-d9881b3ba719",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e0c6d6c6-160a-41f2-995a-413dbf5420da",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 404",
									"item": [
										{
											"name": "[Admin] - PATCH - Editar dados da categoria - Recurso não encontrado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo XYZ\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}99",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}99"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 405",
									"item": [
										{
											"name": "[Admin] - PATCH - Editar dados da categoria - Método não implementado.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "COPY",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "259313df-239a-4ed7-8123-299a3829aefa",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1731cdae-d866-49f4-8394-7b7ec92e7a04",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 405\", function () {",
													"    pm.response.to.have.status(405);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Erros 422",
									"item": [
										{
											"name": "[Admin] - PATCH - Editar dados da categoria - Categoria já cadastrada.",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0dbfb842-f8b5-4c68-a942-e2d110f4bc93",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												},
												{
													"listen": "prerequest",
													"script": {
														"id": "d18025a2-103f-439a-abc3-cdd00a0c5c63",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer  {{token}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"name\": \"Lanche Combo X\"\n}"
												},
												"url": {
													"raw": "{{url}}/products/categories/{{produtoCategoriaId}}99",
													"host": [
														"{{url}}"
													],
													"path": [
														"products",
														"categories",
														"{{produtoCategoriaId}}99"
													]
												}
											},
											"response": []
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b3869133-bde9-434f-bc26-8c0b4809984e",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "adc58b38-31a1-420d-80d8-dfd47d1b32af",
												"type": "text/javascript",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													"",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.be.a(\"object\");",
													"});",
													"",
													"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
													"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
													"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
													"});",
													"",
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "1ef8b3f3-bfe7-4550-82e7-b992cc7b6988",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b17d54a4-90fa-468c-827f-326aba39d1a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7c43a7a4-803d-495e-82bc-41d01977ecc7",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "10d5db70-bc80-416f-aa34-923b8bc83153",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "product",
					"item": [
						{
							"name": "product",
							"item": [
								{
									"name": "Admin - Cadastrar produto",
									"item": [
										{
											"name": "Sucesso",
											"item": [
												{
													"name": "[Admin] - Cadastrar produto",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":20,\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
														"type": "text/javascript",
														"exec": [
															"let jsonResponse =  pm.response.json();",
															"pm.environment.set(\"produtoId\", jsonResponse.id);",
															" ",
															"pm.test(\"Status code is 201\", function () {",
															"    pm.response.to.have.status(201);",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															"pm.test(\"Content-Type is present\", function () {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"id is number\", function () {",
															"    pm.expect(jsonResponse.id).to.a('number');",
															"});",
															"",
															"pm.test(\"name is string\", function () {",
															"    pm.expect(jsonResponse.name).to.a('string');",
															"});",
															"",
															"pm.test(\"price is number\", function () {",
															"    pm.expect(jsonResponse.price).to.a('number');",
															"});",
															"",
															"pm.test(\"product_category_id is number\", function () {",
															"    pm.expect(jsonResponse.product_category_id).to.a('number');",
															"});",
															"",
															"",
															" "
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 401",
											"item": [
												{
													"name": "[Admin] - Cadastrar produto - Sem permissão",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{tokeniiii}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 405",
											"item": [
												{
													"name": "[Admin] - Cadastrar produto - Não implementado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/productsXXX",
															"host": [
																"{{url}}"
															],
															"path": [
																"productsXXX"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 405\", function () {",
															"    pm.response.to.have.status(405);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 422",
											"item": [
												{
													"name": "[Admin] - Cadastrar produto - Nome não informado",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] Cadastrar produto - Preço não informado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] Cadastrar produto - Categoria não informada.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": \"\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] Cadastrar produto - product_category_id não existe.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": 9999999999\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "1b260960-8320-4e5a-9600-1626a584579d",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "aaf365e8-014d-41d8-b431-5adfb5d853ab",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 422\", function () {",
															"    pm.response.to.have.status(422);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.have.jsonBody(\"errors\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d5939d17-81d7-423b-84e2-a725962c6915",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "99622f9e-6283-42d2-820a-d8421494038f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Livre - Retornar produtos pelo ID",
									"item": [
										{
											"name": "Sucesso",
											"item": [
												{
													"name": "[Livre] Retornar produtos pelo ID - Retornar produto pelo ID",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
																"exec": [
																	"pm.test(\"Status code is 200\", function () {",
																	"    pm.response.to.have.status(200);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "b8a1b8b8-df45-4330-b3c5-cece2664b3ce",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "c9415747-ba89-4352-b6a3-8d8cee25b35b",
														"type": "text/javascript",
														"exec": [
															"let jsonResponse =  pm.response.json();",
															" ",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															"pm.test(\"Content-Type is present\", function () {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"id is number\", function () {",
															"    pm.expect(jsonResponse.id).to.a('number');",
															"});",
															"",
															"pm.test(\"name is string\", function () {",
															"    pm.expect(jsonResponse.name).to.a('string');",
															"});",
															"",
															"pm.test(\"price is number\", function () {",
															"    pm.expect(jsonResponse.price).to.a('number');",
															"});",
															"",
															"pm.test(\"product_category_id is number\", function () {",
															"    pm.expect(jsonResponse.product_category_id).to.a('number');",
															"});",
															"",
															"",
															" "
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erro 404",
											"item": [
												{
													"name": "[Livre] Retornar produtos pelo ID - Produto não encontrado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "1edab316-5da0-4e1e-874b-58659a0f2475",
																"exec": [
																	"pm.test(\"Status code is 404\", function () {",
																	"    pm.response.to.have.status(404);",
																	"});",
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{url}}/products/100000000000000",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"100000000000000"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "87b0c61e-8e1e-4501-9be8-fcdf3d5572d9",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "74b58f5e-1da5-473d-8b57-f0d973620d01",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ced825d7-f814-4ad2-b9b8-c0e4c2dce77f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "e413b1db-6929-4605-82ef-e86f21799cde",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Livre - Retornar produtos",
									"item": [
										{
											"name": "Sucesso",
											"item": [
												{
													"name": "[Livre] Retornar produtos - Retornar produtos.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "72ea6efc-af73-4b6c-ad2a-faae2950dfc2",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "6c75aa28-715e-4574-9d48-2ff813206ce7",
														"type": "text/javascript",
														"exec": [
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															"pm.test(\"Content-Type is present\", function () {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"",
															"let qtyResult = pm.response.json().length;",
															"",
															"if(qtyResult > 0){",
															"    ",
															"    let posFunc = function (max) {",
															"      return Math.floor(Math.random() * Math.floor(max));",
															"    }",
															"    ",
															"    let pos          = posFunc(qtyResult);",
															"    let jsonResponse = (pm.response.json())[pos];",
															"",
															"    pm.test(\"id is number\", function () {",
															"        pm.expect(jsonResponse.id).to.a('number');",
															"    });",
															"    ",
															"    pm.test(\"name is string\", function () {",
															"        pm.expect(jsonResponse.name).to.a('string');",
															"    });",
															"    ",
															"    pm.test(\"price is number\", function () {",
															"        pm.expect(jsonResponse.price).to.a('number');",
															"    });",
															"    ",
															"    pm.test(\"product_category_id is number\", function () {",
															"        pm.expect(jsonResponse.product_category_id).to.a('number');",
															"    });",
															"}",
															"",
															"",
															" "
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 405",
											"item": [
												{
													"name": "[Livre] Retornar produtos - Método não implementado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "COPY",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{url}}/products",
															"host": [
																"{{url}}"
															],
															"path": [
																"products"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "6895d9dd-d9f0-4627-af91-ed8b83e4b1be",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "3a276b0f-064f-45ae-844e-4399092fac3f",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 405\", function () {",
															"    pm.response.to.have.status(405);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 404 ",
											"item": [
												{
													"name": "[Livre] Retornar produtos - Retornar produtos.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "502ac0b0-cd6e-4c67-94a6-68839eaba98d",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{url}}/productsXXXX",
															"host": [
																"{{url}}"
															],
															"path": [
																"productsXXXX"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "f2eeb33d-19c5-498c-9029-2217fb60ffee",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "dc25b7c7-a791-41e4-b13b-589abf3d1332",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Admin - PUT - Atualizar produto",
									"item": [
										{
											"name": "Sucesso",
											"item": [
												{
													"name": "[Admin] PUT - Atualizar produto - Atualizar produto",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															"pm.test(\"Content-Type is present\", function () {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 401",
											"item": [
												{
													"name": "[Admin] PUT - Atualizar produto - Sem permissão",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{tokeniiii}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 404",
											"item": [
												{
													"name": "[Admin] PUT - Atualizar produto - Recurso não encontrado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoXYZ\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}99999",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}99999"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "c1d74b3e-e3fa-4a19-a6ef-98b839978fcb",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "44069239-54a8-4eee-bdde-8d9abd87450d",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 404\", function () {",
															"    pm.response.to.have.status(404);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 422",
											"item": [
												{
													"name": "[Admin] PUT - Atualizar produto - Nome não informado",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] PUT - Atualizar produto - Preço não informado.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"\",\r\n\t\"product_category_id\":{{produtoCategoriaId}}\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] PUT - Atualizar produto - Categoria não informada.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"X-TudoX\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": \"\"\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												},
												{
													"name": "[Admin] PUT - Atualizar produto - Product_category_id não existe.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"status\":\"1\",\r\n\t\"name\":\"\",\r\n\t\"price\":\"20\",\r\n\t\"product_category_id\": 9999999999\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "1b260960-8320-4e5a-9600-1626a584579d",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "aaf365e8-014d-41d8-b431-5adfb5d853ab",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 422\", function () {",
															"    pm.response.to.have.status(422);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d5939d17-81d7-423b-84e2-a725962c6915",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "99622f9e-6283-42d2-820a-d8421494038f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								},
								{
									"name": "Admin - PATCH - Atualizar algum campo do produto",
									"item": [
										{
											"name": "Sucesso",
											"item": [
												{
													"name": "[Admin] PATCH - Atualizar algum campo do produto - Atualizar dados do produto.",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														},
														{
															"listen": "prerequest",
															"script": {
																"id": "0807b557-e6f4-46e8-9f52-7a167a3c0140",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"type": "text",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{token}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"price\": 22\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "523f0fb8-ab3d-4250-80e3-fffaa6c48977",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "6d85b38c-eed4-4bd3-9c75-347d87b7856b",
														"type": "text/javascript",
														"exec": [
															"let jsonResponse =  pm.response.json();",
															"",
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															"",
															"pm.test(\"Content-Type is present\", function () {",
															"    pm.response.to.have.header(\"Content-Type\");",
															"});",
															"",
															"pm.test(\"id is number\", function () {",
															"    pm.expect(jsonResponse.id).to.a('number');",
															"});",
															"",
															"pm.test(\"name is string\", function () {",
															"    pm.expect(jsonResponse.name).to.a('string');",
															"});",
															"",
															"pm.test(\"price is number\", function () {",
															"    pm.expect(jsonResponse.price).to.a('number');",
															"});",
															"",
															"pm.test(\"product_category_id is number\", function () {",
															"    pm.expect(jsonResponse.product_category_id).to.a('number');",
															"});",
															"",
															"",
															" "
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										},
										{
											"name": "Erros 401",
											"item": [
												{
													"name": "[Admin] PATCH - Atualizar algum campo do produto - Sem permissão",
													"event": [
														{
															"listen": "test",
															"script": {
																"id": "142856c0-5a6e-4446-8cf4-e39d8a9183a5",
																"exec": [
																	""
																],
																"type": "text/javascript"
															}
														}
													],
													"request": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"name": "Content-Type",
																"value": "application/json",
																"type": "text"
															},
															{
																"key": "Authorization",
																"type": "text",
																"value": "Bearer  {{tokeniiii}}"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\r\n\t\"price\": 22\r\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{url}}/products/{{produtoId}}",
															"host": [
																"{{url}}"
															],
															"path": [
																"products",
																"{{produtoId}}"
															]
														}
													},
													"response": []
												}
											],
											"event": [
												{
													"listen": "prerequest",
													"script": {
														"id": "d1f522b8-8134-4ec5-be46-91b08ca972c1",
														"type": "text/javascript",
														"exec": [
															""
														]
													}
												},
												{
													"listen": "test",
													"script": {
														"id": "cc94372a-32e8-49e7-babf-79ac74b1f710",
														"type": "text/javascript",
														"exec": [
															"pm.test(\"Status code is 401\", function () {",
															"    pm.response.to.have.status(401);",
															"});",
															"",
															"pm.test(\"Body is correct\", function () {",
															"    pm.response.to.be.a(\"object\");",
															"});",
															"",
															"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
															"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
															"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
															"});",
															""
														]
													}
												}
											],
											"protocolProfileBehavior": {},
											"_postman_isSubFolder": true
										}
									],
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d5939d17-81d7-423b-84e2-a725962c6915",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "99622f9e-6283-42d2-820a-d8421494038f",
												"type": "text/javascript",
												"exec": [
													""
												]
											}
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "1649fe64-fcee-43af-807d-b9301c4f2f62",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "8ac53bf0-4d43-4084-8359-e0bec1b7c04d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cart",
			"item": [
				{
					"name": "Cliente - Adicionar item no carrinho de compras",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Adicionar item no carrinho de compras",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": {{produtoId}},\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "54886343-e8cb-49f8-be59-91c976990c4b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9de1f3ab-53b4-47d9-89b1-48fe79569540",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Adicionar item no carrinho de compras - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "qty",
													"value": "2",
													"type": "text"
												},
												{
													"key": "obs",
													"value": "Observação",
													"type": "text"
												},
												{
													"key": "product_id",
													"value": "{{produtoId}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7652a01c-9ce4-494c-9280-b7bb18aacca9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "347301e7-18aa-4a6a-8121-b8296b9405ea",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 405",
							"item": [
								{
									"name": "[Cliente] Adicionar item no carrinho de compras - Não implementado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": {{productId}},\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/cartsXXXX",
											"host": [
												"{{url}}"
											],
											"path": [
												"cartsXXXX"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d063a446-4ead-4cc0-8be1-ff1e09f419c0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d8a714b9-44bc-4ec6-b4ef-dbd01b5b3761",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 405\", function () {",
											"    pm.response.to.have.status(405);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 422",
							"item": [
								{
									"name": "[Cliente] Adicionar item no carrinho de compras - Poduto inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": 999999999999,\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Adicionar item no carrinho de compras - Quantidade não informada",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": \"\",\n\t\"product_id\": {{produtoId}},\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] Adicionar item no carrinho de compras - Poduto não informado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": \"\",\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "55e03c06-908a-4c13-8bbb-7966be9b9821",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3a606242-6ade-4ca2-9fc3-7e7da6c7ddaf",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c13eac4a-1e4e-424d-8b3c-2ee28e294bbf",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c81f215b-ad40-484f-ae50-7b1f3f4fa0b4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - Retornar itens do seu carrinho de compras.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Retornar itens do seu carrinho de compras.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36ad48d8-5e24-4a3f-ac6b-56ff91c88a16",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "5f806e54-55ba-4dc6-a705-c2cc9de14272",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e894f38d-5752-4720-8d9d-06992f2c98ca",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"let qtyResult = pm.response.json().length;",
											"",
											"if(qtyResult > 0){",
											"    ",
											"    let posFunc = function (max) {",
											"      return Math.floor(Math.random() * Math.floor(max));",
											"    }",
											"    ",
											"    let pos          = posFunc(qtyResult);",
											"    let jsonResponse = (pm.response.json())[pos];",
											"    ",
											"    pm.environment.set(\"cartId\", jsonResponse.id);",
											"",
											"    pm.test(\"id is number\", function () {",
											"        pm.expect(jsonResponse.id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"customer_id is number\", function () {",
											"        pm.expect(jsonResponse.customer_id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"qty is number\", function () {",
											"        pm.expect(jsonResponse.qty).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"product_id is number\", function () {",
											"        pm.expect(jsonResponse.product_id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"additionals is array\", function () {",
											"        pm.expect(jsonResponse.additionals).to.be.an('array');",
											"    });",
											"    ",
											"    pm.test(\"product.id is number\", function () {",
											"        pm.expect(jsonResponse.product.id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"product.name is string\", function () {",
											"        pm.expect(jsonResponse.product.name).to.a('string');",
											"    });",
											"    ",
											"    pm.test(\"product.price is number\", function () {",
											"        pm.expect(jsonResponse.product.price).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"product.product_category_id is number\", function () {",
											"        pm.expect(jsonResponse.product.product_category_id).to.a('number');",
											"    });",
											"    ",
											"    pm.test(\"product.status is true\", function () {",
											"        pm.expect(jsonResponse.product.status).to.equal(1);",
											"    });",
											"    ",
											"}",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Retornar itens do seu carrinho de compras. - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "36ad48d8-5e24-4a3f-ac6b-56ff91c88a16",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c0e7b6fb-4121-420f-acee-b3db20d78dfc",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8b979f2c-779f-40f6-a36a-88c58f74013b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "328a257f-3670-4148-8999-6f704f059302",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b92585e6-c661-4333-aff1-448e6574aba9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - PUT - Atualizar todos os dados de um item do seu carrinho de compras",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar todos os dados de um item do seu carrinho de compras",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": {{produtoId}},\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "54886343-e8cb-49f8-be59-91c976990c4b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9de1f3ab-53b4-47d9-89b1-48fe79569540",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200 or 201\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar todos os dados de um item do seu carrinho de compras - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "qty",
													"value": "2",
													"type": "text"
												},
												{
													"key": "obs",
													"value": "Observação",
													"type": "text"
												},
												{
													"key": "product_id",
													"value": "{{produtoId}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "293710ab-bd52-4a99-974f-e1c159de4622",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "449ec3b1-0934-4b38-a223-407e0cf62525",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 422",
							"item": [
								{
									"name": "[Cliente] PUT - Atualizar todos os dados de um item do seu carrinho de compras - Poduto inválido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": 999999999999,\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar todos os dados de um item do seu carrinho de compras - Quantidade não informada",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": \"\",\n\t\"product_id\": {{produtoId}},\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								},
								{
									"name": "[Cliente] PUT - Atualizar todos os dados de um item do seu carrinho de compras - Poduto não informado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0461bcb9-3694-4118-8a5f-14375440ddcd",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"qty\": 2,\n\t\"product_id\": \"\",\n\t\"obs\": \"Observação\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/carts",
											"host": [
												"{{url}}"
											],
											"path": [
												"carts"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "55e03c06-908a-4c13-8bbb-7966be9b9821",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "3a606242-6ade-4ca2-9fc3-7e7da6c7ddaf",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a6b62c5b-7857-45a0-ab46-04662d5d8f15",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "87258cd7-2e70-4d47-a455-f035710ecd1c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b1e244e8-cb9c-496a-8ac7-e5bded57c0e3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "2617bc8c-ba93-49e4-ac1d-f7aabadebe0b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Cliente - Realizar pedido",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Realizar pedido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b133296e-3134-4777-86ab-eec073b96220",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"addressId\": {{addressId}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0772b341-bb91-4738-ab8d-8a97a26b193f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "dd303a40-18aa-4043-816d-9ea494431882",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 201 or 404\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([201,404]);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Realizar pedido - Autorização errada",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b133296e-3134-4777-86ab-eec073b96220",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}WWWW"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"addressId\": {{addressId}}\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3250460a-f065-47a5-8de7-790ad93dccc3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9b5bbeb8-1f2d-424a-90fe-25465ff51e95",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Cliente] Realizar pedido - Endereço não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b133296e-3134-4777-86ab-eec073b96220",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"addressId\": 999898989\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "35a5470a-fc73-4f57-a9b9-f780ca68e270",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f1ae0431-dbb3-4f11-bfdd-4169b16cb333",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "231a08f5-8c1d-4fea-aa11-2e6063c3c30b",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "b907ab0c-5385-4fac-ae2c-be3418903fe4",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - Retornar os seus pedidos",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Retornar os seus pedidos - Cliente Retornar pedidos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "047c2a91-96e9-49b1-8f0e-18a9fae02980",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0fbf2c06-251c-478d-9940-a940fae4942e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "51161ba4-890f-4717-9697-16c7574afca8",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"let json =  pm.response.json();",
											"pm.environment.set(\"orderId\", json[0].id);",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Retornar os seus pedidos - Cliente Retornar pedidos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "047c2a91-96e9-49b1-8f0e-18a9fae02980",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6ab8cc1e-2967-40aa-b305-fc86c3463dbd",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ba421100-ee7f-42be-962a-2f26847b586d",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "3b6a0293-91c9-48b9-b383-51f9df67dfd0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9998cec3-65f4-4b5c-81ea-870a5f279ffe",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - Retornar pedido pelo ID",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Retornar pedido pelo ID - Retornar pedidos pelo ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "db022f3d-1756-4a07-bcfc-a8e8fa65fb25",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "558f65b0-fe3d-41b1-9bee-ef2fd13d2cb5",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Retornar pedido pelo ID - Retornar pedidos pelo ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d0a5b09f-340a-48e7-8624-f8ba0cb4c251",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6a518418-0271-4668-a352-5e2b34cd4407",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Cliente] Retornar pedido pelo ID - Pedido não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/orders/{{orderId}}9999",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"orders",
												"{{orderId}}9999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6757f27b-8bb5-44fc-af8f-f405b5680293",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9fb303dd-1eab-4ea7-bc0d-7a7f6785f390",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e70883b-e444-4e20-8c37-593494df9714",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d0a74946-d3ab-4eb4-9622-abd5ee55c4ec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Retornar todos os pedidos",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Retornar todos os pedidos",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "159a7a91-bd7c-4afc-97db-eba2c73a8255",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e5991e81-be5d-428e-bbdd-4163b43fe046",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "f2dc6dd7-e39b-4430-9907-d38dae7fc629",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "Admin - Retornar todos os pedidos - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "159a7a91-bd7c-4afc-97db-eba2c73a8255",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9a62e49c-d4c8-481c-a347-bccca0c14726",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "665c3b98-9d23-4598-98b1-64c63a5dc4f9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Retornar pedido pelo ID",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Retornar pedido pelo ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "db022f3d-1756-4a07-bcfc-a8e8fa65fb25",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "558f65b0-fe3d-41b1-9bee-ef2fd13d2cb5",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "Admin - Retornar pedido pelo ID - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d0a5b09f-340a-48e7-8624-f8ba0cb4c251",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6a518418-0271-4668-a352-5e2b34cd4407",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "Admin - Retornar pedido pelo ID - Pedido não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "164f3b74-4561-4bf8-afc0-927a53e62910",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/orders/9998989898989",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"9998989898989"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6757f27b-8bb5-44fc-af8f-f405b5680293",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9fb303dd-1eab-4ea7-bc0d-7a7f6785f390",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6e70883b-e444-4e20-8c37-593494df9714",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "d0a74946-d3ab-4eb4-9622-abd5ee55c4ec",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": " Admin -  Modificar status do pedido.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Modificar status do pedido",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfa63378-a333-4fd6-ad03-0ecb1f68b09d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"processing\"\n}"
										},
										"url": {
											"raw": "{{url}}/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "59751d9c-5075-4f35-b243-5aa30dea0950",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "1542a5b9-3309-4bf1-a346-1899acc39220",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Modificar status do pedido - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfa63378-a333-4fd6-ad03-0ecb1f68b09d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}EEE"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"processing\"\n}"
										},
										"url": {
											"raw": "{{url}}/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "b127801e-f1f7-41cb-8eea-2f316314df2b",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e26368bd-29fa-4b44-ae95-36d3635e514b",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Modificar status do pedido - Pedido não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfa63378-a333-4fd6-ad03-0ecb1f68b09d",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"processing\"\n}"
										},
										"url": {
											"raw": "{{url}}/orders/9898989898",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"9898989898"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8efc6c57-c8a5-404c-a2d6-56ae4dee00cd",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "c635ced8-8266-42f5-b408-09ee8dadd3ce",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Error 422",
							"item": [
								{
									"name": "[Admin] Modificar status do pedido - Status inválido.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dfa63378-a333-4fd6-ad03-0ecb1f68b09d",
												"exec": [
													"pm.test(\"Status code is 422\", function () {",
													"    pm.response.to.have.status(422);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"status\": \"898989898\"\n}"
										},
										"url": {
											"raw": "{{url}}/orders/{{orderId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"orders",
												"{{orderId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "3ed08927-30c0-48a4-86ea-d5f9ab8a0d71",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a7916df6-f711-4886-a1f3-374e69551193",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 422\", function () {",
											"    pm.response.to.have.status(422);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.have.jsonBody(\"errors\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0e100dcd-4ac3-4cb5-910d-fec34f535448",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "203fd382-0235-4e5a-a6f3-77a06cbfc34f",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9446a655-3ad9-4906-ab19-0eaec28f1397",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a1f1025a-4641-48f9-8adc-d448633f9289",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Admin  - Deletar produto",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Deletar produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/{{produtoId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"{{produtoId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d33acade-ee0e-4b69-a4ad-4fe061306a97",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d12adad1-550e-4ef8-b3ef-53cf5647dda2",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Deletar produto - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}XXXX"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/{{produtoId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"{{produtoId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a5a4e0a1-3396-4568-b0c1-ff41d2acaf4f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7c0cdf06-cc58-4785-bd5a-9569ba866033",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Deletar produto - Produto não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/999989989898",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"999989989898"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ad561631-9a94-4f1f-9b5f-f3dca2f57e1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "902fb7bc-b507-4f39-b890-5bf0cfa9eaf7",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5e448794-eeca-4ddd-8c53-f2de8dd409c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1d8776dd-c4bc-42a0-82ce-85bbad4dbf6c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Deletar a categoria do produto",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Deletar a categoria do produto",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a434734-0c74-4841-b846-74388c2cb691",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "360b060f-e0b0-4e96-ab3b-cd1fa6842e97",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"categories",
												"{{produtoCategoriaId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c9703534-4706-4ccd-a467-cab3e8976621",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b5c7ee6c-0c8b-425c-bd59-6664273f0cef",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Deletar a categoria do produto - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "92bcd187-1c3c-43c7-bc7f-e11946563653",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenii}}"
											}
										],
										"url": {
											"raw": "{{url}}/products/categories/{{produtoCategoriaId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"categories",
												"{{produtoCategoriaId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f894c995-de31-43a1-8ddb-2c3bd2c72a33",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6408095e-1bd1-4792-aa64-87b8c9a45588",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Deletar a categoria do produto - Categoria não encontrada.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91c841eb-3fb3-48cb-80fc-183b0a29c46a",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "status",
													"value": "0",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "PPPPPPPP",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}/products/categories/{{produtoCategoriaId}}999",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"categories",
												"{{produtoCategoriaId}}999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6132d0b0-1246-474a-aa34-0f6d41307381",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8d00ac43-a42e-4335-bbb4-f3eb85981d8c",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a26c8707-388d-491f-b30b-5d4e37fc0d2e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "edefc561-d519-46b6-bc14-9333c63c977d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Deletar produto adicional",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Deletar produto adicional - Excluir produto adicional.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "466ea7fd-a3f9-45a5-b4e7-0604532939a1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"{{produtoAddtionalId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e6d0b82a-b41d-4574-81e1-2b3d931d15ec",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "cf7c1cb9-2eac-4bb7-b060-d33852e592c8",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Deletar produto adicional - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "466ea7fd-a3f9-45a5-b4e7-0604532939a1",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenLLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"{{produtoAddtionalId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2afbb522-272f-45ae-a161-b99d4d9576d6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "39e94366-6aa2-41c8-88e9-4e5a2baea375",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Deletar produto adicional - Produto adicional não encontrado.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "466ea7fd-a3f9-45a5-b4e7-0604532939a1",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/products/additionals/{{produtoAddtionalId}}999",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"{{produtoAddtionalId}}999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7f2e6b2c-ae91-45a8-bc2f-316bc7442947",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5b3a173b-e373-45b5-a608-17c3d16ca3cf",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "52fd98ca-4477-4622-9912-bb1524325b33",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "9f60db55-5190-4bc3-bf80-7d6e41f7e735",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin - Deletar categoria do produto adicional",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Deletar categoria do produto adicional",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8a434734-0c74-4841-b846-74388c2cb691",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "360b060f-e0b0-4e96-ab3b-cd1fa6842e97",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/additionals/categories/{{produtoCategoriaId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"categories",
												"{{produtoCategoriaId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f88b8213-6b62-4ec1-98e8-c4fc434c25ed",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8b5f6935-79f0-4a04-a14a-c893b708c621",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Deletar categoria do produto adicional - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "92bcd187-1c3c-43c7-bc7f-e11946563653",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{tokenii}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/products/additionals/categories/{{produtoCategoriaId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"categories",
												"{{produtoCategoriaId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "fcb5fab8-ae67-45cb-9d18-6d1660a84e07",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6ea8553b-6dad-40aa-b75c-1171e70793f2",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Deletar categoria do produto adicional - Categoria não encontrada.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "91c841eb-3fb3-48cb-80fc-183b0a29c46a",
												"exec": [
													"pm.test(\"Status code is 404\", function () {",
													"    pm.response.to.have.status(404);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "status",
													"value": "0",
													"type": "text",
													"disabled": true
												},
												{
													"key": "name",
													"value": "PPPPPPPP",
													"type": "text",
													"disabled": true
												}
											]
										},
										"url": {
											"raw": "{{url}}/products/additionals/categories/{{produtoCategoriaId}}999",
											"host": [
												"{{url}}"
											],
											"path": [
												"products",
												"additionals",
												"categories",
												"{{produtoCategoriaId}}999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8c421b9f-5d39-4978-9d7d-0c4cf85e9ee0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "5003e32f-74fa-4243-a91a-72d1fa3ca56a",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "a26c8707-388d-491f-b30b-5d4e37fc0d2e",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "edefc561-d519-46b6-bc14-9333c63c977d",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Cliente - Deletar o seu endereço.",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Cliente] Deletar o seu endereço.",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "72bedcb7-b3e1-4cc6-9ef1-c08e1c9a6434",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customer}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ce9c0de4-69ca-4023-b6e0-29bb59f8c4c2",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "df5330eb-81c6-4d16-900e-185b135a0972",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Cliente] Deletar o seu endereço - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "72bedcb7-b3e1-4cc6-9ef1-c08e1c9a6434",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token-customerLL}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{url}}/customers/addresses/{{addressId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"customers",
												"addresses",
												"{{addressId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "555c34fb-7113-40cf-884e-278c61b7beab",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "4c0b3432-2f23-4ff0-9e1b-ba7b825cd892",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "869932cf-b5cb-4536-a137-7e979e85b658",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "01bc807b-3d6d-4595-879c-37e914946638",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin  - Deletar a localização de frete",
					"item": [
						{
							"name": "Sucesso",
							"item": [
								{
									"name": "[Admin] Deletar a localização de frete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer  {{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d33acade-ee0e-4b69-a4ad-4fe061306a97",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "d12adad1-550e-4ef8-b3ef-53cf5647dda2",
										"type": "text/javascript",
										"exec": [
											"let jsonResponse =  pm.response.json();",
											" ",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											"pm.test(\"Content-Type is present\", function () {",
											"    pm.response.to.have.header(\"Content-Type\");",
											"});",
											"",
											"",
											"",
											"",
											" "
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 401",
							"item": [
								{
									"name": "[Admin] Deletar a localização de frete - Sem permissão",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}XXXX"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "a5a4e0a1-3396-4568-b0c1-ff41d2acaf4f",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7c0cdf06-cc58-4785-bd5a-9569ba866033",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 401\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											"",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Erro 404",
							"item": [
								{
									"name": "[Admin] Deletar a localização de frete - Produto não encontrado",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7879eb6a-dbfd-4ada-9aa6-b46bda52329a",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer  {{token}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": []
										},
										"url": {
											"raw": "{{url}}/shippings/{{shippingId}}999",
											"host": [
												"{{url}}"
											],
											"path": [
												"shippings",
												"{{shippingId}}999"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "ad561631-9a94-4f1f-9b5f-f3dca2f57e1a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "902fb7bc-b507-4f39-b890-5bf0cfa9eaf7",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											"",
											"pm.test(\"Body is correct\", function () {",
											"    pm.response.to.be.a(\"object\");",
											"});",
											"",
											"let varResponseTime = parseInt(pm.environment.get(\"responseTime\"));",
											"pm.test(\"Response time is less than \"+varResponseTime+\"ms\", function () {",
											"    pm.expect(pm.response.responseTime).to.be.below(varResponseTime);",
											"});",
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "5e448794-eeca-4ddd-8c53-f2de8dd409c0",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1d8776dd-c4bc-42a0-82ce-85bbad4dbf6c",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "69e500e2-4e1f-42f3-b7fc-1b89090c73a4",
				"type": "text/javascript",
				"exec": [
					"pm.globals.set(\"urlProdutoAdicional\", \"/product/additional\");",
					"pm.globals.set(\"urlShipping\", \"/shipping\");",
					"pm.globals.set(\"urlProductCategory\", \"/product/category\");",
					"pm.globals.set(\"urlAddress\", \"/address\");",
					"pm.globals.set(\"urlCustomer\", \"/customer\");",
					"pm.globals.set(\"urlCart\", \"/cart\");",
					"pm.globals.set(\"urlOrder\", \"/order\");",
					"pm.globals.set(\"urlCustomerAddres\", \"/customer/address\");",
					"pm.globals.set(\"urlCustomerOrder\", \"/customer/order\");",
					"pm.globals.set(\"urlProduct\", \"/product\");",
					"pm.globals.set(\"urlAdditional\", \"/additional\");",
					"pm.globals.set(\"urlProductImage\", \"/image\");",
					"pm.globals.set(\"urlUser\", \"/user\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "61be5e26-bb4e-4f31-b571-3396b1aa2383",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}